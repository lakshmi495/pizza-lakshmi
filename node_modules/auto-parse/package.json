{
  "_args": [
    [
      {
        "raw": "auto-parse@^1.3.0",
        "scope": null,
        "escapedName": "auto-parse",
        "name": "auto-parse",
        "rawSpec": "^1.3.0",
        "spec": ">=1.3.0 <2.0.0",
        "type": "range"
      },
      "D:\\ChatBot\\Pizzabot\\node_modules\\dotenv-extended"
    ]
  ],
  "_from": "auto-parse@>=1.3.0 <2.0.0",
  "_id": "auto-parse@1.3.0",
  "_inCache": true,
  "_location": "/auto-parse",
  "_nodeVersion": "6.10.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/auto-parse-1.3.0.tgz_1491850981295_0.9242243070621043"
  },
  "_npmUser": {
    "name": "greenpioneer",
    "email": "humphrey.jason32@gmail.com"
  },
  "_npmVersion": "4.4.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "auto-parse@^1.3.0",
    "scope": null,
    "escapedName": "auto-parse",
    "name": "auto-parse",
    "rawSpec": "^1.3.0",
    "spec": ">=1.3.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/dotenv-extended"
  ],
  "_resolved": "https://registry.npmjs.org/auto-parse/-/auto-parse-1.3.0.tgz",
  "_shasum": "c3450c3147a2a4a94bfa1d07011cbcf0d8d22003",
  "_shrinkwrap": null,
  "_spec": "auto-parse@^1.3.0",
  "_where": "D:\\ChatBot\\Pizzabot\\node_modules\\dotenv-extended",
  "author": {
    "name": "Green Pioneer",
    "email": "green@greenpioneersolutions.com"
  },
  "bugs": {
    "url": "https://github.com/greenpioneersolutions/auto-parse/issues"
  },
  "contributors": [
    {
      "name": "greenpioneersolutions",
      "email": "green@greenpioneersolutions.com",
      "url": "https://github.com/greenpioneersolutions"
    },
    {
      "name": "Ionică Bizău",
      "email": "bizauionica@gmail.com",
      "url": "http://ionicabizau.net"
    }
  ],
  "dependencies": {
    "lodash": "^4.16.3",
    "typpy": "^2.3.6"
  },
  "description": "auto-parse any value you happen to send in (String, Number, Boolean,Array, Object, Function, undefined and null). You send it we will try to find a way to parse it.support sending in a string of what type (e.g. boolean) or constructor (e.g. Boolean)",
  "devDependencies": {
    "chai": "^3.5.0",
    "mocha": "^3.1.0",
    "standard": "^8.3.0"
  },
  "directories": {},
  "dist": {
    "shasum": "c3450c3147a2a4a94bfa1d07011cbcf0d8d22003",
    "tarball": "https://registry.npmjs.org/auto-parse/-/auto-parse-1.3.0.tgz"
  },
  "gitHead": "19453c117296cc4237d67d4629cbe24955854a20",
  "homepage": "https://github.com/greenpioneersolutions/auto-parse#readme",
  "keywords": [
    "greenpioneersolutions",
    "greenpioneer",
    "autoParse",
    "autoParser",
    "auto-parse",
    "parse auto",
    "auto",
    "parse",
    "parser",
    "automatically parse",
    "parse string",
    "parse boolean",
    "parse date",
    "parse number",
    "parse function",
    "parse object",
    "parse null",
    "parse color",
    "parse hexadecimals",
    "parse dots",
    "parse octals",
    "parse binary",
    "parse exponent",
    "string parser",
    "boolean parser",
    "date parser",
    "number parser",
    "function parser",
    "object parser",
    "null parser",
    "color parser",
    "hexadecimals parser",
    "dots parser",
    "octals parser",
    "binary parser",
    "exponent parser"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "greenpioneersolutions",
      "url": "https://github.com/greenpioneersolutions?tab=members"
    }
  ],
  "name": "auto-parse",
  "optionalDependencies": {},
  "readme": "# Auto Parse\n\n[![npm][npm-image]][npm-url]\n[![downloads][downloads-image]][downloads-url]\n[![dependencies](https://david-dm.org/greenpioneersolutions/auto-parse.svg)](https://david-dm.org/greenpioneersolutions/auto-parse)\n[![npm-issues](https://img.shields.io/github/issues/greenpioneersolutions/auto-parse.svg)](https://github.com/greenpioneersolutions/auto-parse/issues)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n[![Build Status](https://travis-ci.org/greenpioneersolutions/auto-parse.svg?branch=master)](https://travis-ci.org/greenpioneersolutions/auto-parse)\n[![js-standard-style](https://nodei.co/npm/auto-parse.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/auto-parse.png?downloads=true&downloadRank=true&stars=true)\n\n[npm-image]: https://img.shields.io/npm/v/auto-parse.svg?style=flat\n[npm-url]: https://npmjs.org/package/auto-parse\n[downloads-image]: https://img.shields.io/npm/dt/auto-parse.svg?style=flat\n[downloads-url]: https://npmjs.org/package/auto-parse\n\n## What is Auto Parse\n\n`auto-parse` any value you happen to send in (`String`, `Number`, `Boolean`,\n`Array`, `Object`, `Function`, `undefined` and `null`). You send it we will\ntry to find a way to parse it. We now support sending in a string of what type (e.g. \"boolean\") or constructor (e.g. Boolean)\n\n## Installation\n```sh\nnpm install auto-parse --save\n```\n\n## Documentation\n\n### autoParse(input, type)\n\n#### Params\n- **Anything** `input`: The input value you want parsed\n- **Constructor|String** `type`: The type. It could be a string (e.g. \"array\") or a constructor (e.g. Array).\n\t\n#### Return\n- **Parsed Value** Could return String, Number, Boolean, Object, Array, Null, NaN, Undefined & Date \n\n\n#### Usage\n\n```js\nvar autoParse = require('auto-parse')\n// Strings\nautoParse('Green Pioneer') => 'Green Pioneer'\n// Booleans\nautoParse('TrUe ') => true\nautoParse(false) => false\n// Functions\nautoParse(function () {\n  return '9'\n}) => 9\n// Null &  Undefined\nautoParse(' Undefined ') => undefined\nautoParse(' Null ') => null\n// Objects & Arrays\nautoParse(['80', '92', '23', 'TruE', false]) => [80, 92, 23, true, false]\nautoParse({\n  name: 'jason', // Parses as a String\n  age: '50',// Parses as a Number\n  admin: 'true',// Parses as a Boolean\n  grade: ['80', '90', '100']// Parses as a Array full of Numbers\n}) => {name:'jason',age:50,admin:true,grade:[80,90,100]}\nautoParse('{}') => {}\nautoParse('[\"42\"]')  => [42]\n// Numbers\nautoParse('NaN') => NaN\nautoParse('26') => 26\n// hexadecimals\nautoParse('0xFF') => 255\n// dots\nautoParse('.42') => 0.42\n// octals\nautoParse('0o123') =>  83\n// binary number\nautoParse('0b1101') =>  13\n// exponent \nautoParse('7e3') =>  7000\n\n// Set Type\nautoParse(1, 'Boolean')  =>  true\nautoParse(0, 'Number')  =>   0\nautoParse(1, Boolean)  =>  true\nautoParse(0, Number)  =>   0\nautoParse(1234, String)  =>  '1234'\n// dates\nautoParse('1989-11-30', 'date')  =>  Thu Nov 30 1989 18:00:00 GMT-0600 (CST)\nautoParse('1989-11-30', Date)  =>  Thu Nov 30 1989 18:00:00 GMT-0600 (CST)\n// Passing Functions to type\nfunction Color (inputColor) {\n  this.color = inputColor\n}\nautoParse('#AAA', Color)  =>  {color: '#AAA'}\n```\n- [Check out Run Kit Example](https://runkit.com/greenpioneer/auto-parse)\n- [Check out JS Fiddle Example](https://jsfiddle.net/greenpioneer/4y744xyd/)\n\n#### Other Uses\n``` js\n// Lodash Mixin\nvar autoParse = require('auto-parse')\n _.mixin({'autoParse':autoParse})\n```\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2014-2017 Green Pioneer\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nCreated by ![Green Pioneer](http://greenpioneersolutions.com/img/icons/apple-icon-180x180.png)\n\n#### This is [on GitHub](https://github.com/greenpioneersolutions/auto-parse)\n#### Find us [on GitHub](https://github.com/greenpioneersolutions)\n#### Find us [on Twitter](https://twitter.com/greenpioneerdev)\n#### Find us [on Facebook](https://www.facebook.com/Green-Pioneer-Solutions-1023752974341910)\n#### Find us [on The Web](http://greenpioneersolutions.com/)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://greenpioneer@github.com/greenpioneersolutions/auto-parse.git"
  },
  "scripts": {
    "mocha": "node node_modules/mocha/bin/mocha test/mocha.test.js  ",
    "standard": "node node_modules/standard/bin/cmd.js || standard",
    "test": "npm run mocha && npm run standard"
  },
  "standard": {
    "globals": [
      "angular",
      "toastr",
      "moment",
      "self",
      "_",
      "describe",
      "it",
      "__dirname",
      "localStorage",
      "io",
      "expect",
      "inject",
      "before"
    ]
  },
  "version": "1.3.0"
}
